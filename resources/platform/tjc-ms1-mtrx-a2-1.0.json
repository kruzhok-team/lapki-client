{
  "name": "МС-ТЮК-1: Матрица",
  "id": "tjc-ms1-mtrx-a2",
  "nameTag": "MS1Matrix",
  "description": "Платформа для программирования матрицы МС-ТЮК-1.",
  "icon": "",
  "staticComponents": false,
  "version": "1.0",
  "standardVersion": "1.0",
  "formatVersion": "1.0",
  "language": "C++",
  "author": "Vladislav Syzikh",
  "visual": true,
  "compile": true,
  "mainFileExtension": "cpp",
  "staticActionDelimeter": "::",
  "compilingSettings": [
    {
      "command": "arm-none-eabi-g++",
      "flags": [
        "-mcpu=cortex-m0plus",
        "-DSTM32G030x6",
        "-D_FIR_GIT_REV=\"GIT_NIY\"",
        "-T",
        "./tjc-ms1-b4272ba421624bbe-usercode.ld",
        "./startup_stm32g030xx.s",
        "-o",
        "./build/sketch.elf",
        "-g",
        "./sketch.cpp",
        "-mthumb",
        "--specs=nosys.specs",
        "-Os",
        "qhsm.c",
        "-fno-exceptions",
        "-ffunction-sections",
        "-fdata-sections",
        "-Xlinker",
        "--gc-sections"
      ]
    },
    {
      "command": "arm-none-eabi-objcopy",
      "flags": ["-Obinary", "./build/sketch.elf", "./build/sketch.bin"]
    }
  ],
  "mainFunction": true,
  "delimeter": ";",
  "defaultIncludeFiles": ["stm32g030xx.h", "system.c", "UART.hpp", "Pins.hpp", "macros.hpp"],
  "defaultBuildFiles": [
    "tjc-ms1-b4272ba421624bbe-usercode.ld",
    "system.c",
    "startup_stm32g030xx.s",
    "stm32g030xx.h",
    "core_cm0plus.h",
    "core_cmInstr.h",
    "cmsis_gcc.h",
    "core_cmFunc.h",
    "system_stm32g0xx.h",
    "UART.hpp",
    "Pins.hpp",
    "macros.hpp"
  ],
  "components": {
    "SimpleBus": {
      "name": "Простая шина",
      "description": "Компонент для базового взаимодействия с общей шиной данных на основе простого протокола. Шина является полудуплексной – отправку в конкретный момент времени может осуществлять только одна плата.",
      "img": "tjc-ms/busSimple.svg",
      "signals": {
        "packetReceived": {
          "alias": "Получено сообщение",
          "img": "arduino/byteReceived.svg",
          "description": "Получено сообщение через простую шину от другой платы.",
          "checkMethod": "packetReceived"
        }
      },
      "constructorParameters": {},
      "variables": {
        "myAddress": {
          "alias": "Адрес",
          "img": "tjc-ms/addr.svg",
          "type": "uint8_t",
          "description": "Адрес устройства."
        },
        "lastData": {
          "alias": "Последний символ",
          "img": "tjc-ms/lastData.svg",
          "type": "uint8_t",
          "description": "Последний полученный символ через простую шину от другой платы."
        }
      },
      "methods": {
        "setAddress": {
          "alias": "Установить адрес",
          "img": "tjc-ms/addrSet.svg",
          "parameters": [
            {
              "name": "адрес",
              "type": "byte",
              "description": "Новое значение для адреса. От 0 до 255."
            }
          ],
          "description": "Назначить новый адрес для получения сообщений."
        },
        "sendPacket": {
          "alias": "Отправить",
          "img": "tjc-ms/sendPacket.svg",
          "parameters": [
            {
              "name": "адрес",
              "type": "byte",
              "description": "Адрес устройства-получателя."
            },
            {
              "name": "байт",
              "type": "byte",
              "description": "Байт данных (сообщение). От 0 до 255."
            }
          ],
          "description": "Отправляет символ по адресу."
        }
      },
      "buildFiles": ["SimpleBus.hpp"],
      "importFiles": ["SimpleBus.hpp"],
      "singletone": false
    },
    "DataBus": {
      "name": "Шина данных",
      "description": "Компонент для низкоуровневого взаимодействия с общей шиной данных. Шина является полудуплексной – отправку в конкретный момент времени может осуществлять только одна плата.",
      "img": "tjc-ms/bus.svg",
      "signals": {
        "isByteReceived": {
          "alias": "Получен байт",
          "img": "arduino/byteReceived.svg",
          "description": "Получен байт через шину данных от другой платы.",
          "checkMethod": "isByteReceived"
        }
      },
      "constructorParameters": {
        "Бод": {
          "type": "uint32_t",
          "description": "Единица измерения частоты обмена информации. Для корректной передачи данных необходимо, чтобы все устройства, между которыми происходит коммуникация, были настроены на одинаковую частоту. По-умолчанию равняется 9600.",
          "optional": true
        }
      },
      "variables": {
        "lastByte": {
          "alias": "Последний байт",
          "img": "tjc-ms/lastByte.svg",
          "type": "uint8_t",
          "description": "Последний полученный байт через шину данных от другой платы."
        }
      },
      "methods": {
        "sendByte": {
          "alias": "Отправить",
          "img": "tjc-ms/sendByte.svg",
          "parameters": [
            {
              "name": "байт",
              "type": "byte",
              "description": "Байт данных (сообщение). От 0 до 255."
            }
          ],
          "description": "Отправить байт в шину данных."
        }
      },
      "buildFiles": ["DataBus.hpp"],
      "importFiles": ["DataBus.hpp"],
      "singletone": false
    },

    "Matrix": {
      "name": "Матрица светодиодов",
      "description": "Компонент для взаимодействия со светодиодной матрицей.",
      "img": "tjc-ms/matrix.svg",
      "signals": {},
      "methods": {
        "setPixel": {
          "alias": "Отдельный светодиод",
          "img": "tjc-ms/cellSet.svg",
          "description": "Включить или выключить светодиод.",
          "parameters": [
            {
              "name": "строка",
              "type": "uint8_t",
              "description": "Номер строки, на которой расположен светодиод."
            },
            {
              "name": "столбец",
              "type": "uint8_t",
              "description": "Номер столбца, на котором расположен светодиод."
            },
            {
              "name": "действие",
              "type": ["0", "1"],
              "valueAlias": ["включить", "выключить"],
              "description": "Включение, либо выключение светодиода."
            }
          ]
        },
        "offPixel": {
          "alias": "Выключить светодиод.",
          "img": "tjc-ms/cellClear.svg",
          "description": "Выключение указанного светодиода.",
          "parameters": [
            {
              "name": "строка",
              "type": "uint8_t",
              "description": "Номер строки, на которой расположен светодиод."
            },
            {
              "name": "столбец",
              "type": "uint8_t",
              "description": "Номер столбца, на котором расположен светодиод."
            }
          ]
        },
        "setPattern": {
          "alias": "Рисунок",
          "img": "tjc-ms/draw.svg",
          "description": "Изобразить рисунок на матрице.",
          "parameters": [
            {
              "name": "рисунок",
              "type": "Matrix5x5",
              "description": "Рисунок, который будет изображен на матрице."
            }
          ]
        },
        "fill": {
          "alias": "Яркость",
          "img": "tjc-ms/fill.svg",
          "description": "Установить уровень яркости на все светодиоды.",
          "parameters": [
            {
              "name": "уровень",
              "type": "uint8_t",
              "description": "Уровень яркости, который будет установлен на каждый светодиод."
            }
          ]
        },
        "clear": {
          "alias": "Очистить",
          "img": "tjc-ms/matrixEmpty.svg",
          "description": "Выключить все светодиоды.",
          "parameters": []
        },
        "maskPixel": {
          "alias": "Маска для светодиода",
          "img": "tjc-ms/maskCell.svg",
          "description": "Включить или выключить светодиод, используя битовую маску.",
          "parameters": [
            {
              "name": "строка",
              "type": "uint8_t",
              "description": "Номер строки, на которой расположен светодиод."
            },
            {
              "name": "столбец",
              "type": "uint8_t",
              "description": "Номер столбца, на котором расположен светодиод."
            },
            {
              "name": "действие",
              "type": ["0", "1"],
              "valueAlias": ["включить", "выключить"],
              "description": "Включение, либо выключение светодиода."
            },
            {
              "name": "операция",
              "type": ["mask_and", "mask_or", "mask_xor"],
              "valueAlias": ["AND", "OR", "XOR"],
              "description": "Битовая функция, используемая для установки значения."
            }
          ]
        },
        "maskRow": {
          "alias": "Маска для строки",
          "img": "tjc-ms/maskRow.svg",
          "description": "Включить или выключить строку светодиодов, используя битовую маску.",
          "parameters": [
            {
              "name": "строка",
              "type": "uint8_t",
              "description": "Номер строки, для которой нужно применить маску."
            },
            {
              "name": "рисунок",
              "type": "Matrix5x1",
              "description": "Рисунок, который будет применен к строке на матрице."
            },
            {
              "name": "операция",
              "type": ["mask_and", "mask_or", "mask_xor"],
              "valueAlias": ["AND", "OR", "XOR"],
              "description": "Битовая функция, используемая для установки значения."
            }
          ]
        },
        "maskCol": {
          "alias": "Маска для столбца",
          "img": "tjc-ms/maskCol.svg",
          "description": "Включить или выключить столбец светодиодов, используя битовую маску.",
          "parameters": [
            {
              "name": "столбец",
              "type": "uint8_t",
              "description": "Номер столбца, для которого нужно применить маску."
            },
            {
              "name": "рисунок",
              "type": "Matrix1x5",
              "description": "Рисунок, который будет применен к столбцу на матрице."
            },
            {
              "name": "операция",
              "type": ["mask_and", "mask_or", "mask_xor"],
              "valueAlias": ["AND", "OR", "XOR"],
              "description": "Битовая функция, используемая для установки значения."
            }
          ]
        },
        "maskPattern": {
          "alias": "Маска",
          "img": "tjc-ms/maskGrid.svg",
          "description": "Изобразить рисунок на матрице, используя битовую маску.",
          "parameters": [
            {
              "name": "рисунок",
              "type": "Matrix5x5",
              "description": "Рисунок, который будет изображен на матрице."
            },
            {
              "name": "операция",
              "type": ["mask_and", "mask_or", "mask_xor"],
              "valueAlias": ["AND", "OR", "XOR"],
              "description": "Битовая функция, используемая для установки значения."
            }
          ]
        }
      },
      "variables": {},
      "constructorParameters": {},
      "buildFiles": ["Matrix.hpp"],
      "importFiles": ["Matrix.hpp"],
      "singletone": false
    },

    "Timer": {
      "name": "Таймер",
      "description": "Программный таймер",
      "img": "arduino/timer.svg",
      "signals": {
        "timeout": {
          "alias": "Тайм-аут",
          "img": "arduino/timeout.svg",
          "description": "Время вышло!",
          "checkMethod": "timeout"
        }
      },
      "constructorParameters": {},
      "methods": {
        "reset": {
          "alias": "Сброс",
          "img": "arduino/reset.svg",
          "description": "Сбросить таймер, отчет начнется сначала."
        },
        "disable": {
          "alias": "Отключить",
          "img": "arduino/timer-stop.svg",
          "description": "Отключить таймер."
        },
        "enable": {
          "alias": "Включить",
          "img": "arduino/timer-start.svg",
          "description": "Включить таймер."
        },
        "start": {
          "alias": "Старт",
          "img": "arduino/start.svg",
          "parameters": [
            {
              "name": "интервал",
              "type": "unsigned long",
              "description": "Интервал срабатывания (в миллисекундах)."
            }
          ],
          "description": "Запустить таймер. Будет сигнал раз в интервал."
        }
      },
      "buildFiles": ["Timer.h"],
      "importFiles": ["Timer.h"],
      "singletone": false,
      "variables": {
        "difference": {
          "alias": "Разница",
          "img": "arduino/difference.svg",
          "type": "unsigned long",
          "description": "Оставшееся время (в миллисекундах) до окончания таймера."
        }
      }
    },
    "Counter": {
      "name": "Счетчик",
      "description": "Переменная-счетчик.",
      "img": "arduino/counter.svg",
      "signals": {},
      "constructorParameters": {},
      "methods": {
        "add": {
          "alias": "Увеличить",
          "img": "arduino/add.svg",
          "description": "Добавить указанное значение к счетчику.",
          "parameters": [
            {
              "name": "значение",
              "type": "int"
            }
          ]
        },
        "sub": {
          "alias": "Уменьшить",
          "img": "arduino/sub.svg",
          "description": "Вычесть указанное значение из счетчика.",
          "parameters": [
            {
              "name": "значение",
              "type": "int"
            }
          ]
        },
        "set": {
          "alias": "Установить",
          "img": "common/set.svg",
          "description": "Установить значение счетчика.",
          "parameters": [
            {
              "name": "значение",
              "type": "int"
            }
          ]
        },
        "reset": {
          "alias": "Сброс",
          "img": "arduino/reset.svg",
          "description": "Обнулить значение счетчика."
        }
      },
      "variables": {
        "value": {
          "alias": "значение",
          "img": "common/value.svg",
          "description": "Текущее значение счетчика.",
          "type": "int"
        }
      },
      "buildFiles": ["Counter.h", "Counter.cpp"],
      "importFiles": ["Counter.h"],
      "singletone": false
    },

    "Random": {
      "name": "Генератор случайностей",
      "description": "Генерация псевдо-случайного числа.",
      "img": "common/random.svg",
      "constructorParameters": {},
      "signals": {},
      "methods": {
        "setSeed": {
          "alias": "Установить затравку",
          "img": "common/randomSeed.svg",
          "parameters": [
            {
              "name": "затравка",
              "type": "unsigned long"
            }
          ],
          "description": "Продвинутая функция для отладки. Вручную устанавливает затравку для генератора случайностей, чтобы он выдавал одинаковые последовательности значений при каждом запуске программы. Для нормальной работы этого не требуется, и затравка будет взята из встроенного генератора истинных случайных чисел."
        },
        "doRandom": {
          "alias": "Сгенерировать",
          "img": "common/randomRoll.svg",
          "description": "Сгенерировать случайное число"
        },
        "doRangeRandom": {
          "alias": "Сгенерировать в диапазоне",
          "img": "common/randomRange.svg",
          "parameters": [
            {
              "name": "начало",
              "type": "signed long long"
            },
            {
              "name": "конец",
              "type": "signed long long"
            }
          ],
          "description": "Сгенерировать случайное число в заданном диапазоне [начало; конец)."
        }
      },
      "buildFiles": ["Random.hpp"],
      "importFiles": ["Random.hpp"],
      "singletone": false,
      "variables": {
        "value": {
          "alias": "Целое число",
          "img": "common/valueSigned.svg",
          "type": "signed long",
          "description": "Сгенерированное целое число со знаком."
        },
        "uValue": {
          "alias": "Натуральное число",
          "img": "common/valueUnsigned.svg",
          "type": "unsigned long",
          "description": "Сгенерированное беззнаковое целое число."
        }
      }
    },

    "CalcInt": {
      "name": "Калькулятор (целые числа)",
      "description": "Компонент для вычислений над целым числом. Хранит число, над которым можно совершать арифметические и двоичные операции. Результат операции перезаписывает предыдущее число, и к нему можно обратиться через атрибут. Обратите внимание, число хранится в 32-разрядном знаковом формате.",
      "img": "math/calcInt.svg",
      "signals": {
        "isOverflow": {
          "alias": "Переполнение значения",
          "img": "math/overflow.svg",
          "description": "Произошло переполнение хранимого значения калькулятора (в него попытались записать слишком большое значение).",
          "checkMethod": "isOverflow"
        },
        "isZeroDivision": {
          "alias": "Деление на ноль",
          "img": "math/divZero.svg",
          "description": "Произошло деление на ноль. Значению калькулятора верить нельзя, в нём может быть что-то странное.",
          "checkMethod": "isZeroDivision"
        }
      },
      "methods": {
        "set": {
          "alias": "Установить значение",
          "img": "common/set-value.svg",
          "description": "Установить значение, которое будет храниться в калькуляторе.",
          "parameters": [
            {
              "name": "значение",
              "type": "int32_t",
              "description": "Новое значение для калькулятора."
            }
          ]
        },
        "add": {
          "alias": "Прибавить",
          "img": "math/add.svg",
          "description": "Прибавить значение к хранимому числу калькулятора.",
          "parameters": [
            {
              "name": "слагаемое",
              "type": "int32_t",
              "description": "Слагаемое для операции."
            }
          ]
        },
        "sub": {
          "alias": "Вычесть",
          "img": "math/sub.svg",
          "description": "Вычесть значение из хранимого числа калькулятора.",
          "parameters": [
            {
              "name": "вычитаемое",
              "type": "int32_t",
              "description": "Вычитаемое для операции."
            }
          ]
        },
        "mul": {
          "alias": "Умножить",
          "img": "math/mul.svg",
          "description": "Умножить значение хранимого числа калькулятора.",
          "parameters": [
            {
              "name": "множитель",
              "type": "int32_t",
              "description": "Множитель для операции."
            }
          ]
        },
        "div": {
          "alias": "Разделить",
          "img": "math/div.svg",
          "description": "Целочисленное деление хранимого числа калькулятора. При делении на ноль значение не изменяется и возникает сигнал.",
          "parameters": [
            {
              "name": "делитель",
              "type": "int32_t",
              "description": "Делитель для операции."
            }
          ]
        },
        "mod": {
          "alias": "Разделить по модулю",
          "img": "math/mod.svg",
          "description": "Получить остаток от деления хранимого числа калькулятора на указанный делитель. При делении на ноль значение не изменяется и возникает сигнал.",
          "parameters": [
            {
              "name": "делитель",
              "type": "int32_t",
              "description": "Делитель для операции."
            }
          ]
        },
        "neg": {
          "alias": "Поменять знак",
          "img": "math/neg.svg",
          "description": "Поменять знак у хранимого числа калькулятора.",
          "parameters": []
        },
        "abs": {
          "alias": "Модуль",
          "img": "math/abs.svg",
          "description": "Установить абсолютное значение для хранимого числа калькулятора.",
          "parameters": []
        },
        "bitAnd": {
          "alias": "Битовое И",
          "img": "math/bitAnd.svg",
          "description": "Побитовое И между хранимым числом калькулятора и параметром.",
          "parameters": [
            {
              "name": "значение",
              "type": "int32_t",
              "description": "Значение для операции."
            }
          ]
        },
        "bitOr": {
          "alias": "Битовое ИЛИ",
          "img": "math/bitOr.svg",
          "description": "Побитовое ИЛИ между хранимым числом калькулятора и параметром.",
          "parameters": [
            {
              "name": "значение",
              "type": "int32_t",
              "description": "Значение для операции."
            }
          ]
        },
        "bitXor": {
          "alias": "Битовое исключающее ИЛИ",
          "img": "math/bitXor.svg",
          "description": "Побитовая операция XOR между хранимым числом калькулятора и параметром.",
          "parameters": [
            {
              "name": "значение",
              "type": "int32_t",
              "description": "Значение для операции."
            }
          ]
        },
        "bitNot": {
          "alias": "Битовое НЕ",
          "img": "math/bitNot.svg",
          "description": "Побитовое отрицание для хранимого числа калькулятора.",
          "parameters": []
        },
        "shiftLeft": {
          "alias": "Битовый сдвиг влево",
          "img": "math/shiftLeft.svg",
          "description": "Побитовый сдвиг влево для хранимого числа калькулятора.",
          "parameters": [
            {
              "name": "сдвиг",
              "type": "int32_t",
              "description": "Количество бит для сдвига."
            }
          ]
        },
        "shiftRight": {
          "alias": "Битовый сдвиг вправо",
          "img": "math/shiftRight.svg",
          "description": "Побитовый сдвиг вправо для хранимого числа калькулятора.",
          "parameters": [
            {
              "name": "сдвиг",
              "type": "int32_t",
              "description": "Количество бит для сдвига."
            }
          ]
        }
      },
      "variables": {
        "value": {
          "alias": "Результат",
          "img": "common/value.svg",
          "type": "int32_t",
          "description": "Хранимое число калькулятора."
        }
      },
      "constructorParameters": {},
      "buildFiles": ["CalcInt.hpp", "OverflowHelpers.hpp"],
      "importFiles": ["CalcInt.hpp"],
      "singletone": false
    },

    "CalcFloat": {
      "name": "Калькулятор (плавающая точка)",
      "description": "Компонент для вычислений над числом c плавающей точкой. Хранит число, над которым можно совершать арифметические операции. Результат операции перезаписывает предыдущее число, и к нему можно обратиться через атрибут. Обратите внимание, число с плавающей точкой — это приближённое представление действительных чисел в памяти вычислительных устройств.",
      "img": "math/calcFloat.svg",
      "signals": {
        "isOverflow": {
          "alias": "Переполнение значения",
          "img": "math/overflow.svg",
          "description": "Произошло переполнение хранимого значения калькулятора (в него попытались записать слишком большое значение).",
          "checkMethod": "isOverflow"
        },
        "isZeroDivision": {
          "alias": "Деление на ноль",
          "img": "math/divZero.svg",
          "description": "Произошло деление на ноль. Значению калькулятора верить нельзя, в нём может быть что-то странное.",
          "checkMethod": "isZeroDivision"
        }
      },
      "methods": {
        "set": {
          "alias": "Установить значение",
          "img": "common/set-value.svg",
          "description": "Установить значение, которое будет храниться в калькуляторе.",
          "parameters": [
            {
              "name": "значение",
              "type": "float",
              "description": "Новое значение для калькулятора."
            }
          ]
        },
        "add": {
          "alias": "Прибавить",
          "img": "math/add.svg",
          "description": "Прибавить значение к хранимому числу калькулятора.",
          "parameters": [
            {
              "name": "слагаемое",
              "type": "float",
              "description": "Слагаемое для операции."
            }
          ]
        },
        "sub": {
          "alias": "Вычесть",
          "img": "math/sub.svg",
          "description": "Вычесть значение из хранимого числа калькулятора.",
          "parameters": [
            {
              "name": "вычитаемое",
              "type": "float",
              "description": "Вычитаемое для операции."
            }
          ]
        },
        "mul": {
          "alias": "Умножить",
          "img": "math/mul.svg",
          "description": "Умножить значение хранимого числа калькулятора.",
          "parameters": [
            {
              "name": "множитель",
              "type": "float",
              "description": "Множитель для операции."
            }
          ]
        },
        "div": {
          "alias": "Разделить",
          "img": "math/div.svg",
          "description": "Деление хранимого числа калькулятора. При делении на ноль значение не изменяется и возникает сигнал.",
          "parameters": [
            {
              "name": "делитель",
              "type": "float",
              "description": "Делитель для операции."
            }
          ]
        },
        "mod": {
          "alias": "Разделить по модулю",
          "img": "math/mod.svg",
          "description": "Получить остаток от деления хранимого числа калькулятора на указанный делитель. При делении на ноль значение не изменяется и возникает сигнал.",
          "parameters": [
            {
              "name": "делитель",
              "type": "float",
              "description": "Делитель для операции."
            }
          ]
        },
        "neg": {
          "alias": "Поменять знак",
          "img": "math/neg.svg",
          "description": "Поменять знак у хранимого числа калькулятора.",
          "parameters": []
        },
        "abs": {
          "alias": "Модуль",
          "img": "math/abs.svg",
          "description": "Установить абсолютное значение для хранимого числа калькулятора.",
          "parameters": []
        },
        "pow": {
          "alias": "Степень",
          "img": "math/pow.svg",
          "description": "Возвести хранимое число калькулятора в степень.",
          "parameters": [
            {
              "name": "степень",
              "type": "float",
              "description": "Значение для операции (возводимая степень)."
            }
          ]
        },
        "sqrt": {
          "alias": "Корень",
          "img": "math/sqrt.svg",
          "description": "Взять квадратный корень от хранимого числа калькулятора.",
          "parameters": []
        },
        "log": {
          "alias": "Логарифм",
          "img": "math/log.svg",
          "description": "Логарифм от хранимого числа калькулятора с задаваемым основанием.",
          "parameters": [
            {
              "name": "основание",
              "type": "float",
              "description": "Значение для операции (основание логарифма)."
            }
          ]
        }
      },
      "variables": {
        "value": {
          "alias": "Результат",
          "img": "common/value.svg",
          "type": "float",
          "description": "Хранимое число калькулятора."
        }
      },
      "constructorParameters": {},
      "buildFiles": ["CalcFloat.hpp", "OverflowHelpers.hpp"],
      "importFiles": ["CalcFloat.hpp"],
      "singletone": false
    },

    "Array": {
      "name": "Массив",
      "description": "Статический массив значений. Не умеет изменять длину.",
      "img": "common/array.svg",
      "signals": {},
      "constructorParameters": {
        "size": {
          "type": "uint16_t",
          "description": "Размер массива (должен быть не более, чем 65535 элементов)",
          "optional": false
        }
      },
      "methods": {
        "set": {
          "alias": "Установить значение",
          "img": "common/set-value.svg",
          "description": "Установить значение элементу с указываемым индексом.",
          "parameters": [
            {
              "name": "индекс",
              "img": "common/arrayIndex.svg",
              "description": "Индекс элемента массива.",
              "type": "uint16_t"
            },
            {
              "name": "значение",
              "img": "common/value.svg",
              "description": "Новое значение для элемента массива.",
              "type": "int16_t"
            }
          ]
        },
        "peek": {
          "alias": "Установить индекс",
          "img": "common/arrayPeek.svg",
          "description": "Переместиться на элемент с заданным индексом.",
          "parameters": [
            {
              "name": "индекс",
              "img": "common/arrayIndex.svg",
              "description": "Индекс элемента массива.",
              "type": "uint16_t"
            }
          ]
        },
        "next": {
          "alias": "Сместить индекс вправо",
          "img": "common/arrayNext.svg",
          "description": "Переместиться на элемент со следующим индексом."
        },
        "prev": {
          "alias": "Сместить индекс влево",
          "img": "common/arrayPrev.svg",
          "description": "Переместиться на элемент с предыдущим индексом."
        }
      },
      "buildFiles": ["Array.hpp"],
      "importFiles": ["Array.hpp"],
      "singletone": false,
      "variables": {
        "value": {
          "alias": "Текущее значение",
          "img": "common/value.svg",
          "type": "int16_t",
          "description": "Значение элемента массива с текущим индексом."
        },
        "index": {
          "alias": "Значение указателя",
          "img": "common/arrayIndex.svg",
          "type": "uint16_t",
          "description": "Текущий индекс."
        },
        "size": {
          "alias": "Длина массива",
          "img": "common/arraySize.svg",
          "type": "uint16_t",
          "description": "Размер массива."
        }
      }
    },

    "Alarm": {
      "name": "Сигнальная линия",
      "description": "Компонент для взаимодействия с общей сигнальной линией. Общая сигнальная линия – это инструмент коммуникации с другими платами. Другие платы могут реагировать на действия этого компонента с помощью компонента «Наблюдатель сигнальной линии».",
      "img": "tjc-ms/alarm.svg",
      "signals": {},
      "constructorParameters": {},
      "methods": {
        "call": {
          "alias": "Поднять",
          "img": "tjc-ms/alarmSet.svg",
          "description": "Поднять сигнальную линию. Это действие спровоцирует событие для компонента «Наблюдатель сигнальной линии» на других платах."
        },
        "release": {
          "img": "tjc-ms/alarmStop.svg",
          "description": "Отпустить сигнальную линию. Это действие позволяет освободить общую сигнальную линию для других устройств."
        }
      },
      "buildFiles": ["Alarm.hpp"],
      "importFiles": ["Alarm.hpp"],
      "singletone": false,
      "variables": {}
    },

    "AlarmListener": {
      "name": "Наблюдатель сигнальной линии",
      "description": "Компонент для наблюдения за общей сигнальной линией. Общая сигнальная линия – это инструмент коммуникации с другими платами. Этот компонент, может реагировать на сигналы, посылаемые по общей линии другими платами.",
      "img": "tjc-ms/alarmGet.svg",
      "signals": {
        "onAlarm": {
          "alias": "Линия поднята",
          "img": "tjc-ms/alarmSet.svg",
          "description": "Общая сигнальная линия была поднята.",
          "checkMethod": "onAlarm"
        }
      },
      "constructorParameters": {},
      "methods": {},
      "buildFiles": ["AlarmListener.hpp"],
      "importFiles": ["AlarmListener.hpp"],
      "singletone": false,
      "variables": {}
    },

    "UserSignal": {
      "name": "Свой сигнал",
      "description": "Компонент для создания произвольных, искусственных событий. Бывает полезным для упрощения диаграммы.",
      "img": "common/userSignal.svg",
      "signals": {
        "isCalled": {
          "alias": "Вызов",
          "img": "common/signalIsCalled.svg",
          "description": "Вызвано искусственное событие.",
          "checkMethod": "isCalled"
        }
      },
      "constructorParameters": {},
      "methods": {
        "call": {
          "alias": "Вызвать",
          "img": "common/signalCall.svg",
          "description": "Вызвать искусственное событие."
        }
      },
      "buildFiles": ["UserSignal.hpp"],
      "importFiles": ["UserSignal.hpp"],
      "singletone": false,
      "variables": {}
    },

    "Iterator": {
      "name": "Итератор",
      "description": "Итератор",
      "img": "common/iterator.svg",
      "signals": {
        "onEnd": {
          "alias": "Конец",
          "img": "common/onIterationEnd.svg",
          "description": "Итерации завершены",
          "checkMethod": "onEnd"
        },
        "onIteration": {
          "alias": "На итерации",
          "img": "common/onIteration.svg",
          "description": "Очередная итерация",
          "checkMethod": "onIteration"
        }
      },
      "constructorParameters": {},
      "methods": {
        "stop": {
          "alias": "стоп",
          "img": "common/break.svg",
          "description": "Остановить итератор."
        },
        "start": {
          "alias": "Старт",
          "img": "arduino/start.svg",
          "parameters": [
            {
              "name": "от",
              "type": "unsigned long",
              "description": "Начальное значение."
            },
            {
              "name": "до",
              "type": "unsigned long",
              "description": "Конечное значение."
            },
            {
              "name": "шаг",
              "type": "unsigned long",
              "description": "Шаг для изменения значения."
            }
          ],
          "description": "Запустить итератор. Будет сигнал раз в итерацию."
        }
      },
      "buildFiles": ["Iterator.hpp"],
      "importFiles": ["Iterator.hpp"],
      "singletone": false,
      "variables": {
        "index": {
          "alias": "Индекс",
          "img": "common/iteratorIndex.svg",
          "type": "unsigned long",
          "description": "Текущий индекс итерации"
        }
      }
    }
  }
}
