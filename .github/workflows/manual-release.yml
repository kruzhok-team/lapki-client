name: Build Release manually

on:
  workflow_dispatch:

jobs:
  linux-windows-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Init submodules
        run: git submodule update --init --checkout --recursive
      - name: Download avrdude
        run: |
          wget https://github.com/avrdudes/avrdude/releases/download/v8.0/avrdude-v8.0-windows-x86.zip -O resources/modules/win32/avrdude.zip
          unzip resources/modules/win32/avrdude.zip -d resources/modules/win32
          rm -f resources/modules/win32/avrdude.zip
      - name: Download Arduino CLI
        run: |
          wget https://downloads.arduino.cc/arduino-cli/arduino-cli_latest_Windows_64bit.zip -O resources/modules/win32/arduino-cli.zip
          unzip resources/modules/win32/arduino-cli.zip -d resources/modules/win32/arduino-cli/
          rm -f resources/modules/win32/arduino-cli.zip
      - name: Download gcc-arm-none-eabi
        run: |
          wget https://seafile.polyus-nt.ru/f/83d0be836d1c491fa3b3/?dl=1 -O build/gcc-arm-none-eabi.zip
          unzip build/gcc-arm-none-eabi.zip -d build/gcc-arm-none-eabi
          rm -f build/gcc-arm-none-eabi.zip
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: electronuserland/builder:wine
          options: -v ${{ github.workspace }}:/project
          run: |
            npm ci
            npm run build
            npm run bundle:linux
            npm run bundle:win

      - name: Save deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb-build
          path: |
            dist/*.deb

      - name: Save exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: exe-build
          path: |
            dist/*.exe

      - name: Save snap artifact
        uses: actions/upload-artifact@v4
        with:
          name: snap-build
          path: |
            dist/*.snap

      - name: Save AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: appimage-build
          path: |
            dist/*.AppImage

  mac-build:
    runs-on: 'macos-latest'

    needs: linux-windows-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build
      - run: npm run bundle:mac

      - name: Save dmg artifact
        uses: actions/upload-artifact@v4
        with:
          name: dmg-build
          path: |
            dist/*.dmg
