import { ErrorInfo, Component, ReactNode } from 'react';

// TODO: a—Ç—Ä–∏–±—É—Ü–∏—è
// Cat Poop by Denis Sazhin from <a href="https://thenounproject.com/browse/icons/term/cat-poop/" target="_blank" title="Cat Poop Icons">Noun Project</a> (CC BY 3.0)
import { ReactComponent as CatError } from '../assets/icons/cat-error.svg';

export interface WhoopsieScreenProps {
  children: ReactNode;
}

export interface WhoopsieScreenState {
  hasError: boolean;
}

export class WhoopsieScreen extends Component<WhoopsieScreenProps, WhoopsieScreenState> {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(_error) {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–ª—É—à–∫—É.
    return { hasError: true };
  }

  componentDidCatch(error: Error, _info: ErrorInfo) {
    console.error('%c<üôÄüí©> –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', 'font-size: 20px');
    console.error(error);
    console.error('%c</üôÄüí©>', 'font-size: 20px');
  }

  unwhoopsie() {
    this.setState({ hasError: false });
  }

  openDevTools() {
    window.electron.ipcRenderer.invoke('devtools');
  }

  render() {
    if (this.state.hasError) {
      // TODO: —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const buttonStyle = 'text-2xl text-white rounded-md bg-slate-600 p-1 w-[200px]';
      return (
        <div className="loading-overlay">
          <div className="flex select-none flex-col items-center text-white">
            <CatError />
            <p className="text-3xl italic ">–•—å—é—Å—Ç–æ–Ω, —Å—Ä–æ—á–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ—Ç–æ–∫</p>
            <p className="text-sm italic">
              Lapki IDE —Å–¥–µ–ª–∞–ª–∞ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤{' '}
              <a className="font-bold" onClick={() => this.openDevTools()}>
                –∫–æ–Ω—Å–æ–ª–∏
              </a>
            </p>
            <br />
            <button onClick={() => this.unwhoopsie()} className={buttonStyle}>
              –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å
            </button>
            <p className="pb-1 text-xs italic">(–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)</p>
            <button onClick={() => location.reload()} className={buttonStyle}>
              –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
            </button>
          </div>
        </div>
      );
    }

    return this.props.children;
  }
}
