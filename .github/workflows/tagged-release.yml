name: 'tagged-release'

on:
  push:
    tags:
      - 'v*'

jobs:
  linux-windows-build:
    runs-on: 'ubuntu-latest'

    permissions: write-all

    outputs:
      upload_url: ${{ steps.automatic_releases.outputs.upload_url }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download a file
        run: |
          wget https://github.com/avrdudes/avrdude/releases/download/v7.2/avrdude-v7.2-windows-x86.zip -O resources/modules/win32/avrdude.zip
          unzip resources/modules/win32/avrdude.zip -d resources/modules/win32
          rm -f resources/modules/win32/avrdude.zip

      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: electronuserland/builder:wine
          options: -v ${{ github.workspace }}:/project
          run: |
            npm ci
            npm run build
            npm run bundle:linux
            npm run bundle:win

      - uses: 'marvinpinto/action-automatic-releases@latest'
        id: 'automatic_releases'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          files: |
            dist/*.deb
            dist/*.snap
            dist/*.AppImage
            dist/*.exe

  mac-build:
    runs-on: 'macos-latest'

    permissions: write-all

    needs: linux-windows-build

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build
      - run: npm run bundle:mac

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.linux-windows-build.outputs.upload_url }}
          asset_path: ./dist/lapki-ide-${{ github.ref_name }}.dmg
          asset_name: lapki-ide-${{ github.ref_name }}.dmg
          asset_content_type: application/octet-stream
